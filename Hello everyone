local JimmysCoolLibrary = {}

JimmysCoolLibrary.Themes = {
    Dark = {
        MainFrame = Color3.fromRGB(35, 35, 35),
        TitleBar = Color3.fromRGB(45, 45, 45),
        TitleText = Color3.fromRGB(255, 255, 255),
        Button = Color3.fromRGB(55, 55, 55),
        ButtonText = Color3.fromRGB(255, 255, 255),
        ScrollFrame = Color3.fromRGB(35, 35, 35),
        Element = Color3.fromRGB(45, 45, 45),
        ElementText = Color3.fromRGB(255, 255, 255),
        ToggleOn = Color3.fromRGB(0, 255, 0),
        ToggleOff = Color3.fromRGB(255, 0, 0),
        ToggleButton = Color3.fromRGB(45, 45, 45)
    },
    Light = {
        MainFrame = Color3.fromRGB(245, 245, 245),
        TitleBar = Color3.fromRGB(225, 225, 225),
        TitleText = Color3.fromRGB(0, 0, 0),
        Button = Color3.fromRGB(215, 215, 215),
        ButtonText = Color3.fromRGB(0, 0, 0),
        ScrollFrame = Color3.fromRGB(245, 245, 245),
        Element = Color3.fromRGB(225, 225, 225),
        ElementText = Color3.fromRGB(0, 0, 0),
        ToggleOn = Color3.fromRGB(0, 255, 0),
        ToggleOff = Color3.fromRGB(255, 0, 0),
        ToggleButton = Color3.fromRGB(225, 225, 225)
    }
}

function JimmysCoolLibrary:CreateHub(title, themeName)
    local theme = self.Themes[themeName] or self.Themes.Dark

    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local mainFrame = Instance.new("Frame", screenGui)
    mainFrame.Size = UDim2.new(0, 400, 0, 300)
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    mainFrame.BackgroundColor3 = theme.MainFrame
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true

    local titleBar = Instance.new("Frame", mainFrame)
    titleBar.Size = UDim2.new(1, 0, 0, 20)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = theme.TitleBar
    titleBar.BorderSizePixel = 0

    local titleLabel = Instance.new("TextLabel", titleBar)
    titleLabel.Size = UDim2.new(1, -50, 1, 0)
    titleLabel.Position = UDim2.new(0, 50, 0, 0)
    titleLabel.Text = title or "Hub"
    titleLabel.TextColor3 = theme.TitleText
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left

    local minimizeButton = Instance.new("TextButton", titleBar)
    minimizeButton.Size = UDim2.new(0, 20, 0, 20)
    minimizeButton.Position = UDim2.new(1, -70, 0, 0)
    minimizeButton.Text = "-"
    minimizeButton.TextColor3 = theme.TitleText
    minimizeButton.BackgroundColor3 = theme.TitleBar
    minimizeButton.BorderSizePixel = 0
    minimizeButton.AutoButtonColor = false
    minimizeButton.TextXAlignment = Enum.TextXAlignment.Center

    local isMinimized = false
    minimizeButton.MouseButton1Click:Connect(function()
        if isMinimized then
            mainFrame.Size = UDim2.new(0, 400, 0, 300)
            minimizeButton.Text = "-"
            isMinimized = false
            tabButtonHolder.Visible = true
        else
            mainFrame.Size = UDim2.new(0, 400, 0, 20)
            minimizeButton.Text = "+"
            isMinimized = true
            tabButtonHolder.Visible = false
        end
    end)

    local closeButton = Instance.new("TextButton", titleBar)
    closeButton.Size = UDim2.new(0, 20, 0, 20)
    closeButton.Position = UDim2.new(1, -30, 0, 0)
    closeButton.Text = "Ã—"
    closeButton.TextColor3 = theme.TitleText
    closeButton.BackgroundColor3 = theme.TitleBar
    closeButton.BorderSizePixel = 0
    closeButton.AutoButtonColor = false
    closeButton.TextXAlignment = Enum.TextXAlignment.Center
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)

    local tabButtonHolder = Instance.new("Frame", mainFrame)
    tabButtonHolder.Size = UDim2.new(0, 100, 1, -20)
    tabButtonHolder.Position = UDim2.new(0, 0, 0, 20)
    tabButtonHolder.BackgroundColor3 = theme.Button
    tabButtonHolder.BorderSizePixel = 0

    local tabHolder = Instance.new("Frame", mainFrame)
    tabHolder.Size = UDim2.new(1, -100, 1, -20)
    tabHolder.Position = UDim2.new(0, 100, 0, 20)
    tabHolder.BackgroundColor3 = theme.ScrollFrame
    tabHolder.BorderSizePixel = 0

    local window = {frame = mainFrame, tabs = {}, tabButtonHolder = tabButtonHolder}

    function window:AddTab(name)
        local tabIndex = #self.tabs + 1

        local tabButton = Instance.new("TextButton", self.tabButtonHolder)
        tabButton.Text = name
        tabButton.Size = UDim2.new(1, 0, 0, 40)
        tabButton.Position = UDim2.new(0, 0, 0, (tabIndex - 1) * 45)
        tabButton.BackgroundColor3 = theme.Button
        tabButton.TextColor3 = theme.ButtonText
        tabButton.BorderSizePixel = 0
        tabButton.TextXAlignment = Enum.TextXAlignment.Left

        local tabScrollFrame = Instance.new("ScrollingFrame", tabHolder)
        tabScrollFrame.Size = UDim2.new(1, 0, 1, 0)
        tabScrollFrame.Position = UDim2.new(0, 0, 0, 0)
        tabScrollFrame.BackgroundColor3 = theme.ScrollFrame
        tabScrollFrame.BorderSizePixel = 0
        tabScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
        tabScrollFrame.ScrollBarThickness = 8
        tabScrollFrame.Visible = false

        tabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(self.tabs) do
                tab.scrollFrame.Visible = false
            end
            tabScrollFrame.Visible = true
        end)

        local tab = {scrollFrame = tabScrollFrame, elements = {}}

        function tab:AddText(content)
            local textLabel = Instance.new("TextLabel", self.scrollFrame)
            textLabel.Text = content
            textLabel.Size = UDim2.new(1, -10, 0, 40)
            textLabel.Position = UDim2.new(0, 5, 0, #self.elements * 45)
            textLabel.BackgroundColor3 = theme.Element
            textLabel.TextColor3 = theme.ElementText
            textLabel.BorderSizePixel = 0
            textLabel.TextWrapped = true
            textLabel.TextXAlignment = Enum.TextXAlignment.Left
            table.insert(self.elements, textLabel)

            self.scrollFrame.CanvasSize = UDim2.new(0, 0, 0, #self.elements * 45)
        end

        function tab:AddButton(buttonText, callback)
            local button = Instance.new("TextButton", self.scrollFrame)
            button.Text = buttonText
            button.Size = UDim2.new(1, -10, 0, 40)
            button.Position = UDim2.new(0, 5, 0, #self.elements * 45)
            button.BackgroundColor3 = theme.Element
            button.TextColor3 = theme.ElementText
            button.BorderSizePixel = 0
            button.TextWrapped = true
            button.AutoButtonColor = false
            button.TextXAlignment = Enum.TextXAlignment.Left
            button.MouseButton1Click:Connect(callback)
            table.insert(self.elements, button)

            self.scrollFrame.CanvasSize = UDim2.new(0, 0, 0, #self.elements * 45)
        end

        function tab:AddList(listText, items)
            local listLabel = Instance.new("TextLabel", self.scrollFrame)
            listLabel.Text = listText
            listLabel.Size = UDim2.new(1, -10, 0, 40)
            listLabel.Position = UDim2.new(0, 5, 0, #self.elements * 45)
            listLabel.BackgroundColor3 = theme.Element
            listLabel.TextColor3 = theme.ElementText
            listLabel.BorderSizePixel = 0
            listLabel.TextXAlignment = Enum.TextXAlignment.Left
            table.insert(self.elements, listLabel)

            self.scrollFrame.CanvasSize = UDim2.new(0, 0, 0, #self.elements * 45)

            for _, item in ipairs(items) do
                local itemLabel = Instance.new("TextLabel", self.scrollFrame)
                itemLabel.Text = item
                itemLabel.Size = UDim2.new(1, -10, 0, 40)
                itemLabel.Position = UDim2.new(0, 5, 0, #self.elements * 45)
                itemLabel.BackgroundColor3 = theme.Element
                itemLabel.TextColor3 = theme.ElementText
                itemLabel.BorderSizePixel = 0
                itemLabel.TextXAlignment = Enum.TextXAlignment.Left
                table.insert(self.elements, itemLabel)

                self.scrollFrame.CanvasSize = UDim2.new(0, 0, 0, #self.elements * 45)
            end
        end

        function tab:AddToggle(toggleText, defaultState, callback)
            local toggleFrame = Instance.new("Frame", self.scrollFrame)
            toggleFrame.Size = UDim2.new(1, -10, 0, 40)
            toggleFrame.Position = UDim2.new(0, 5, 0, #self.elements * 45)
            toggleFrame.BackgroundColor3 = theme.Element
            toggleFrame.BorderSizePixel = 0

            local toggleLabel = Instance.new("TextLabel", toggleFrame)
            toggleLabel.Size = UDim2.new(0.8, 0, 1, 0)
            toggleLabel.Position = UDim2.new(0, 0, 0, 0)
            toggleLabel.Text = toggleText
            toggleLabel.TextColor3 = theme.ElementText
            toggleLabel.BackgroundTransparency = 1
            toggleLabel.TextXAlignment = Enum.TextXAlignment.Left

            local toggleButton = Instance.new("TextButton", toggleFrame)
            toggleButton.Size = UDim2.new(0.2, 0, 1, 0)
            toggleButton.Position = UDim2.new(0.8, 0, 0, 0)
            toggleButton.BackgroundColor3 = defaultState and theme.ToggleOn or theme.ToggleOff
            toggleButton.Text = ""
            toggleButton.BorderSizePixel = 0
            toggleButton.AutoButtonColor = false

            local state = defaultState

            toggleButton.MouseButton1Click:Connect(function()
                state = not state
                toggleButton.BackgroundColor3 = state and theme.ToggleOn or theme.ToggleOff
                callback(state)
            end)

            table.insert(self.elements, toggleFrame)

            self.scrollFrame.CanvasSize = UDim2.new(0, 0, 0, #self.elements * 45)
        end

        self.tabs[tabIndex] = tab

        return tab
    end

    return window
end

return JimmysCoolLibrary
