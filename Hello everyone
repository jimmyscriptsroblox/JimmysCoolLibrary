local JimmysCoolLibrary = {}

JimmysCoolLibrary.Themes = {
    Dark = {
        MainFrame = Color3.fromRGB(30, 30, 30),
        TitleBar = Color3.fromRGB(40, 40, 40),
        TitleText = Color3.fromRGB(255, 255, 255),
        Button = Color3.fromRGB(50, 50, 50),
        ButtonText = Color3.fromRGB(255, 255, 255),
        ScrollFrame = Color3.fromRGB(40, 40, 40),
        Element = Color3.fromRGB(50, 50, 50),
        ElementText = Color3.fromRGB(255, 255, 255),
        ToggleOff = Color3.fromRGB(100, 100, 100),
        ToggleOn = Color3.fromRGB(0, 255, 0),
        BackgroundTexture = "rbxassetid://1234567890"
    },
    Manga = {
        MainFrame = Color3.fromRGB(0, 0, 0),
        TitleBar = Color3.fromRGB(50, 50, 50),
        TitleText = Color3.fromRGB(255, 255, 255),
        Button = Color3.fromRGB(80, 80, 80),
        ButtonText = Color3.fromRGB(255, 255, 255),
        ScrollFrame = Color3.fromRGB(50, 50, 50),
        Element = Color3.fromRGB(80, 80, 80),
        ElementText = Color3.fromRGB(255, 255, 255),
        ToggleOff = Color3.fromRGB(120, 120, 120),
        ToggleOn = Color3.fromRGB(255, 0, 0),
        BackgroundTexture = "rbxassetid://9876543210"
    },
    Ocean = {
        MainFrame = Color3.fromRGB(0, 119, 190),
        TitleBar = Color3.fromRGB(0, 89, 150),
        TitleText = Color3.fromRGB(255, 255, 255),
        Button = Color3.fromRGB(0, 89, 150),
        ButtonText = Color3.fromRGB(255, 255, 255),
        ScrollFrame = Color3.fromRGB(0, 119, 190),
        Element = Color3.fromRGB(0, 89, 150),
        ElementText = Color3.fromRGB(255, 255, 255),
        ToggleOff = Color3.fromRGB(70, 120, 150),
        ToggleOn = Color3.fromRGB(0, 255, 255),
        BackgroundTexture = "rbxassetid://14159786307"
    }
}

function JimmysCoolLibrary:CreateHub(title, themeName)
    local theme = self.Themes[themeName] or self.Themes.Dark

    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local mainFrame = Instance.new("Frame", screenGui)
    mainFrame.Size = UDim2.new(0, 400, 0, 300)
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    mainFrame.BackgroundColor3 = theme.MainFrame
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true

    local titleBar = Instance.new("Frame", mainFrame)
    titleBar.Size = UDim2.new(1, 0, 0, 20)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = theme.TitleBar
    titleBar.BorderSizePixel = 0

    local titleLabel = Instance.new("TextLabel", titleBar)
    titleLabel.Size = UDim2.new(1, -50, 1, 0)
    titleLabel.Position = UDim2.new(0, 50, 0, 0)
    titleLabel.Text = title or "Hub"
    titleLabel.TextColor3 = theme.TitleText
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left

    local minimizeButton = Instance.new("TextButton", titleBar)
    minimizeButton.Size = UDim2.new(0, 20, 0, 20)
    minimizeButton.Position = UDim2.new(1, -70, 0, 0)
    minimizeButton.Text = "-"
    minimizeButton.TextColor3 = theme.TitleText
    minimizeButton.BackgroundColor3 = theme.TitleBar
    minimizeButton.BorderSizePixel = 0
    minimizeButton.AutoButtonColor = false
    minimizeButton.TextXAlignment = Enum.TextXAlignment.Center

    local isMinimized = false
    minimizeButton.MouseButton1Click:Connect(function()
        if isMinimized then
            mainFrame.Size = UDim2.new(0, 400, 0, 300)
            minimizeButton.Text = "-"
            isMinimized = false
            tabButtonHolder.Visible = true
        else
            mainFrame.Size = UDim2.new(0, 400, 0, 20)
            minimizeButton.Text = "+"
            isMinimized = true
            tabButtonHolder.Visible = false
        end
    end)

    local closeButton = Instance.new("TextButton", titleBar)
    closeButton.Size = UDim2.new(0, 20, 0, 20)
    closeButton.Position = UDim2.new(1, -30, 0, 0)
    closeButton.Text = "Ã—"
    closeButton.TextColor3 = theme.TitleText
    closeButton.BackgroundColor3 = theme.TitleBar
    closeButton.BorderSizePixel = 0
    closeButton.AutoButtonColor = false
    closeButton.TextXAlignment = Enum.TextXAlignment.Center
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)

    local tabButtonHolder = Instance.new("Frame", mainFrame)
    tabButtonHolder.Size = UDim2.new(0, 100, 1, -20)
    tabButtonHolder.Position = UDim2.new(0, 0, 0, 20)
    tabButtonHolder.BackgroundColor3 = theme.Button
    tabButtonHolder.BorderSizePixel = 0

    local tabHolder = Instance.new("Frame", mainFrame)
    tabHolder.Size = UDim2.new(1, -100, 1, -20)
    tabHolder.Position = UDim2.new(0, 100, 0, 20)
    tabHolder.BackgroundColor3 = theme.ScrollFrame
    tabHolder.BorderSizePixel = 0

    if theme.BackgroundTexture then
        local background = Instance.new("ImageLabel", tabHolder)
        background.Size = UDim2.new(1, 0, 1, 0)
        background.Position = UDim2.new(0, 0, 0, 0)
        background.Image = theme.BackgroundTexture
        background.BackgroundTransparency = 1
        background.ZIndex = 0
        background.ImageTransparency = 1
        background.Active = false
    end

    local window = {frame = mainFrame, tabs = {}, tabButtonHolder = tabButtonHolder}

    function window:AddTab(name)
        local tabIndex = #self.tabs + 1

        local tabButton = Instance.new("TextButton", self.tabButtonHolder)
        tabButton.Text = name
        tabButton.Size = UDim2.new(1, 0, 0, 30)
        tabButton.Position = UDim2.new(0, 0, (tabIndex - 1) * 30, 0)
        tabButton.TextColor3 = theme.ButtonText
        tabButton.BackgroundColor3 = theme.Button
        tabButton.BorderSizePixel = 0
        tabButton.AutoButtonColor = false

        tabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(self.tabs) do
                tab.Visible = false
            end
            self.tabs[tabIndex].Visible = true
        end)

        local tabFrame = Instance.new("Frame", tabHolder)
        tabFrame.Size = UDim2.new(1, 0, 1, 0)
        tabFrame.Position = UDim2.new(0, 0, 0, 0)
        tabFrame.BackgroundColor3 = theme.Element
        tabFrame.Visible = false

        self.tabs[tabIndex] = tabFrame

        return tabFrame
    end

    function window:AddText(tabIndex, text)
        local tabFrame = self.tabs[tabIndex]
        if not tabFrame then return end

        local textLabel = Instance.new("TextLabel", tabFrame)
        textLabel.Size = UDim2.new(1, 0, 0, 30)
        textLabel.BackgroundColor3 = theme.Element
        textLabel.TextColor3 = theme.ElementText
        textLabel.Text = text
        textLabel.TextSize = 14
        textLabel.TextXAlignment = Enum.TextXAlignment.Left
        textLabel.TextWrapped = true
    end

    function window:AddButton(tabIndex, text, callback)
        local tabFrame = self.tabs[tabIndex]
        if not tabFrame then return end

        local button = Instance.new("TextButton", tabFrame)
        button.Size = UDim2.new(1, 0, 0, 30)
        button.BackgroundColor3 = theme.Button
        button.TextColor3 = theme.ButtonText
        button.Text = text
        button.BorderSizePixel = 0

        button.MouseButton1Click:Connect(function()
            if callback then callback() end
        end)
    end

    function window:AddInput(tabIndex, text, callback)
        local tabFrame = self.tabs[tabIndex]
        if not tabFrame then return end

        local inputLabel = Instance.new("TextLabel", tabFrame)
        inputLabel.Size = UDim2.new(1, 0, 0, 30)
        inputLabel.BackgroundColor3 = theme.Element
        inputLabel.TextColor3 = theme.ElementText
        inputLabel.Text = text
        inputLabel.TextSize = 14
        inputLabel.TextXAlignment = Enum.TextXAlignment.Left
        inputLabel.TextWrapped = true

        local inputBox = Instance.new("TextBox", tabFrame)
        inputBox.Size = UDim2.new(1, 0, 0, 30)
        inputBox.Position = UDim2.new(0, 0, 0, 30)
        inputBox.BackgroundColor3 = theme.Element
        inputBox.TextColor3 = theme.ElementText
        inputBox.BorderSizePixel = 0
        inputBox.PlaceholderText = "Enter text"
        inputBox.ClearTextOnFocus = false

        inputBox.FocusLost:Connect(function(enterPressed)
            if enterPressed and callback then callback(inputBox.Text) end
        end)
    end

    function window:AddToggle(tabIndex, text, callback)
        local tabFrame = self.tabs[tabIndex]
        if not tabFrame then return end

        local toggleFrame = Instance.new("Frame", tabFrame)
        toggleFrame.Size = UDim2.new(1, 0, 0, 40)
        toggleFrame.BackgroundColor3 = theme.Element

        local toggleLabel = Instance.new("TextLabel", toggleFrame)
        toggleLabel.Size = UDim2.new(0, 200, 1, 0)
        toggleLabel.Position = UDim2.new(0, 0, 0, 0)
        toggleLabel.Text = text
        toggleLabel.BackgroundColor3 = theme.Element
        toggleLabel.TextColor3 = theme.ElementText
        toggleLabel.BorderSizePixel = 0

        local toggleSwitch = Instance.new("TextButton", toggleFrame)
        toggleSwitch.Size = UDim2.new(0, 50, 1, 0)
        toggleSwitch.Position = UDim2.new(1, -60, 0, 0)
        toggleSwitch.BackgroundColor3 = theme.ToggleOff
        toggleSwitch.Text = "OFF"
        toggleSwitch.TextColor3 = theme.ElementText
        toggleSwitch.BorderSizePixel = 0

        local toggled = false
        toggleSwitch.MouseButton1Click:Connect(function()
            toggled = not toggled
            if toggled then
                toggleSwitch.BackgroundColor3 = theme.ToggleOn
                toggleSwitch.Text = "ON"
            else
                toggleSwitch.BackgroundColor3 = theme.ToggleOff
                toggleSwitch.Text = "OFF"
            end
            if callback then callback(toggled) end
        end)
    end

    return window
end

return JimmysCoolLibrary
